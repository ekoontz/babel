;; Format: a vector of tuples; each tuple has:
;; :agr   agreement
;; :p     parsing rules: pairs of (from:regex -> to:replacement pattern)
;; :g     generation rules: pairs of (from:regex -> to:replacement pattern)
;;
;; TODO: fill in uncommented blanks below:
;;  add examples for every pattern, both parsing (:p) and generation (:g).
[
 {:agr {:number :sing
        :gender :fem}
  :u {:synsem {:essere true}}
  :g [#"(.*)are$"  "$1ata"
      #"(.*)arsi$" "$1ata"
      #"(.*)ere$"  "$1uta" 
      #"(.*)ersi$" "$1uta"
      #"(.*)ire$"  "$1ita" 
      #"(.*)irsi$" "$1ita"]
      
  :p [
      #"(.*)esa"       "$1eso"
      #"(.*)([aiu])ta" "$1$2to"
      #"(.*)tita"      "$1tito"
      #"(.*)asta"      "$1asto"
      #"(.*)ata"       "$1are"
      #"(.*)ata"       "$1arsi"
      #"(.*)ita"       "$1ire"
      #"(.*)ita"       "$1irsi"
      #"(.*)ta"        "$1ire" ;; morta -> morire
      #"(.*)uta"       "$1ere" ;; (cad)uta -> (cad)ere
      #"(.*)uta"       "$1ersi"
      #"(.*)uta"       "$1uto"]}
      
  
 
 {:u {:synsem {:essere true}}
  :agr {:number :plur
        :gender :fem}
  :g [#"(.*)are$"  "$1ate"
      #"(.*)arsi$" "$1ate"
      #"(.*)ere$"  "$1ute" 
      #"(.*)ersi$" "$1ute"
      #"(.*)ire$"  "$1ite"
      #"(.*)irsi$" "$1ite"]
  :p [
      #"(.*)ese"       "$1eso"
      #"(.*)([aiu])te" "$1$2to"
      #"(.*)tite"      "$1tito"
      #"(.*)aste"      "$1asto"
      #"(.*)ese"       "$1eso"           ;; scese -> sceso -> scendere
      #"(.*)ate"       "$1are"
      #"(.*)ate"       "$1arsi"
      #"(.*)ite"       "$1ire"
      #"(.*)ite"       "$1irsi"
      #"(.*)te"        "$1ire" ;; morte -> morire
      #"(.*)ute"       "$1ere" ;; (cad)ute -> (cad)ere
      #"(.*)ute"       "$1ersi"
      #"(.*)ute"       "$1irsi"
      #"(.*)ute"       "$1ire"
      #"(.*)ute"       "$1uto"]}
 
 {:u {:synsem {:essere true}}
  :agr {:number :plur
        :gender :masc}
  :g [#"(.*)are$"  "$1ati"
      #"(.*)arsi$" "$1ati"
      #"(.*)ere$"  "$1uti" 
      #"(.*)ersi$" "$1uti"
      #"(.*)ire$"  "$1iti"
      #"(.*)irsi$" "$1iti"]
  :p [
      #"(.*)esi"       "$1eso"
      #"(.*)([aiu])ti" "$1$2to"
      #"(.*)titi"      "$1tito"
      #"(.*)asti"      "$1asto"
      #"(.*)([aiu])ti" "$1$2re" ;; (usc)(i)ti -> (usc)(i)re
      #"(.*)ati"       "$1arsi"
      #"(.*)ti"        "$1ire" ;; morti -> morire      
      #"(.*)uti"       "$1ere" ;; (cad)uti -> (cad)ere

      ;; scesi -> sceso (convert to irregular passato 'sceso' rather than
      ;; infinitive "scendere":
      #"(.*)esi"       "$1eso"]} 
 
 {:u {:synsem {:essere true}}
  :g [#"(.*)are$"  "$1ato"
      #"(.*)arsi$" "$1ato"
      #"(.*)ere$"  "$1uto" 
      #"(.*)ersi$" "$1uto"
      #"(.*)ire$"  "$1ito"
      #"(.*)irsi$" "$1ito"]
  :agr {:number :sing
        :gender :masc}
  :p [
      #"(.*)ato" "$1are"
      #"(.*)ato" "$1arsi"
      #"(.*)ito" "$1ire"
      #"(.*)ito" "$1irsi"
      #"(.*)uto" "$1ere" ;; (cad)uto -> (cad)ere
      #"(.*)uto" "$1ersi"]}
      

 {:u {:synsem {:essere false}}
  :g [#"(.*)are$"  "$1ato"
      #"(.*)arsi$" "$1ato"
      #"(.*)ere$"  "$1uto" 
      #"(.*)ersi$" "$1uto"
      #"(.*)ire$"  "$1ito"
      #"(.*)irsi$" "$1ito"]
  :p [
      #"(.*)ato" "$1are"
      #"(.*)ato" "$1arsi"
      #"(.*)ito" "$1ire"
      #"(.*)ito" "$1irsi"
      #"(.*)uto" "$1ere"
      #"(.*)uto" "$1ersi"]}]
      
 
