;; Format: a vector of tuples; each tuple has:
;; :agr   agreement
;; :p     parsing rules: pairs of (from:regex -> to:replacement pattern)
;; :g     generation rules: pairs of (from:regex -> to:replacement pattern)
;;
;; TODO: fill in uncommented blanks below:
;;  add examples for every pattern, both parsing (:p) and generation (:g and :boot-stem1).
[
 {:agr {:number :sing
        :person :1st}
  :boot-stem-plus "o" ;; uscire -> esco
  :g [#"[aei]re$"  "o"
      #"[aei]rsi$" "o"]
  :p [#"(.*)o$"         "$1are"
      #"(.*)o$"         "$1ere"
      #"(.*)isco$"      "$1ire"
      #"(.*)o$"         "$1ire"
      #"(.*)o$"         "$1arsi" ;; alzo -> alzarsi
      #"(.*)o$"         "$1irsi" ;; diverto -> divertirso
      #"(.*)ico$"       "$1ire" ;; dico -> dire
      ]}
 {:agr {:number :sing
        :person :2nd}
  :boot-stem-plus "i" ;; uscire -> esci 
  :g [#"care$"     "chi"
      #"carsi$"    "chi"
      #"[aei]re$"  "i"
      #"[aei]rsi$" "i"]
  :p [#"(.*)i$"         "$1are" ;; lavi -> lavare
      #"(.*)i$"         "$1iare" ;; studi -> studiare
      #"(.*)i$"         "$1arsi" ;; lavi -> lavarsi
      #"(.*)cci$"       "$1cciare" ;; abbracci -> abbracciare
      #"(.*)i$"         "$1ere"
      #"(.*)i$"         "$1ire" ;; senti -> sentire
      #"(.*c)hi$"       "$1are" ;; cerchi -> cercare
      #"(.*)i$"         "$1iarsi" ;; arrabi -> arrabiarsi
      #"(.*)sci$"       "$1re" ;; finisci -> finire
      #"(.*)i$"         "$1irsi" ;; diverti -> divertirsi
      #"(.*)ici$"       "$1ire" ;; dici -> dire
      #"(.*)hi$"        "$1are" ;; pieghi -> piegare
      ]}
 
 {:agr {:number :sing
        :person :3rd}
  :boot-stem-plus "e" ;; uscire -> esce 
  :g [#"are$"     "a"
      #"arsi$"    "a"
      #"[ei]re$"  "e"
      #"[ei]rsi$" "e"]
  :p [#"(.*)a$"         "$1are"
      #"(.*)e$"         "$1ere"
      #"(.*)e$"         "$1ire"
      #"(.*)a$"         "$1arsi" ;; prepara -> preperarsi
      #"(.*)sce$"       "$1re" ;; finisce -> finire
      #"(.*)te$"        "$1tirsi" ;; diverte -> divertirsi
      #"(.*)ice$"       "$1ire" ;; dice -> dire
      ]}
 
 {:agr {:number :plur
        :person :1st}
  :g [#"[aei]re$"  "iamo"
      #"[aei]rsi$" "iamo"]
  :p [#"(.*)iamo$"      "$1are"  ;; parliamo -> parlare
      #"(.*)iamo$"      "$1iare" ;; mangiamo -> mangiare
      #"(.*)iamo$"      "$1ere"
      #"(.*)iamo$"      "$1ire"
      #"(.*c)hiamo$"    "$1are" ;; sprechiamo -> sprecare
      #"(.*)iamo$"      "$1iarsi" ;; arrabiamo -> arrabiarsi
      #"(.*)iamo$"      "$1arsi" ;; chiamiamo -> chiamarsi
      #"(.*)iamo$"      "$1irsi" ;; divertiamo -> divertirsi
      #"(.*)ciamo$"     "$1re" ;; diciamo -> dire
      #"(.*)hiamo$"     "$1are" ;; pieghiamo -> piegare
      ]}

 {:agr {:number :plur
        :person :2nd}
  :g [#"([aei])re$"  "$1te"
      #"([aei])rsi$" "$1te"]
  :p [#"(.*)([aei])te$" "$1$2re" ;; parlate -> parlare
      #"(.*)([aei])te$" "$1$2rsi" ;; chiamate -> chiamarsi
      ]}
 
 {:agr {:number :plur
        :person :3rd}
  :boot-stem-plus    "ono" ;; uscire -> escono 
  :g  [#"are$"       "ano"
       #"[ei]re$"    "ono"
       #"arsi$"      "ano"
       #"[ei]rsi$"   "ono"]
  :p  [#"(.*)ano$"   "$1are"
       #"(.*)ono$"   "$1ere"
       #"(.*)ono$"   "$1ire"
       #"(.*)ano$"   "$1arsi" ;; alzano -> alzarsi
       #"(.*)scono$" "$1re" ;; finiscono -> finire
       #"(.*)ono$"   "$1irsi" ;; divertono -> divertirsi
       #"(.*)cono$"  "$1re" ;; dicono -> dire
       #"(.*)ono$"   "$1irsi" ;; vestono -> vestirsi
       ]}
 ]



