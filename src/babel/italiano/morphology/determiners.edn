[
 ;; <generation rules>: turn lexicon-derived strings into surface strings.
 ;; il -> lo
 {:g [#"\bil ((gn)|(io)|(jo)|(pn)|(s[^aeiou])|([xyz]))"  "lo $1"]}
 
 ;; i -> gli
 {:g [ #"\bi (([aeiou])|(gn)|(io)|(jo)|(pn)|(s[^aeiou])|([xyz]))"  "gli $1"]}
 
 ;; la -> l'
 {:g [ #"\bla ([aeiou])"                                           "l'$1"]}
 
 ;; un -> uno
 {:g [ #"\bun ((gn)|(io)|(jo)|(pn)|(s[^aeiou])|([xyz]))"           "uno $1"]}
 
 ;; una -> un'
 {:g [ #"\bun ([aeiou])"                                           "un'$1"]}
 ;; </generation rules>
 
 {:p [#"^dell$" "del"]
  :u {:cat :det
      :agr {:number :sing
              :gender :masc}}}
 
 {:p [#"^dell$" "della"]
  :u {:cat :det
      :agr {:number :sing
            :gender :fem}}}
 
 {:p [#"^gli$" "i"] ;; "gli" -> "i"
  :u {:synsem {:cat :det
               :agr {:number :plur
                     :gender :masc}}}}
 
 {:p [#"^l$" "la"] ;; "l'" -> "la"
  :u {:synsem {:cat :det
               :agr {:number :sing
                     :gender :fem}}}}
 
 {:p [#"^l$" "il"] ;; "l'" -> "il"
  :u {:synsem {:cat :det
               :agr {:number :sing
                     :gender :masc}}}}

 ]
